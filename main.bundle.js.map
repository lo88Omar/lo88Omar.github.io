{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/contacts/contacts.component.css","./src/app/contacts/contacts.component.html","./src/app/contacts/contacts.component.ts","./src/app/detail-contact/detail-contact.component.css","./src/app/detail-contact/detail-contact.component.html","./src/app/detail-contact/detail-contact.component.ts","./src/app/detail-tache/detail-tache.component.css","./src/app/detail-tache/detail-tache.component.html","./src/app/detail-tache/detail-tache.component.ts","./src/app/detail-user/detail-user.component.css","./src/app/detail-user/detail-user.component.html","./src/app/detail-user/detail-user.component.ts","./src/app/edit-tache/edit-tache.component.css","./src/app/edit-tache/edit-tache.component.html","./src/app/edit-tache/edit-tache.component.ts","./src/app/edit-user/edit-user.component.css","./src/app/edit-user/edit-user.component.html","./src/app/edit-user/edit-user.component.ts","./src/app/gallery/gallery.component.css","./src/app/gallery/gallery.component.html","./src/app/gallery/gallery.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/new-contact/new-contact.component.css","./src/app/new-contact/new-contact.component.html","./src/app/new-contact/new-contact.component.ts","./src/app/new-tache/new-tache.component.css","./src/app/new-tache/new-tache.component.html","./src/app/new-tache/new-tache.component.ts","./src/app/page-not-found/page-not-found.component.css","./src/app/page-not-found/page-not-found.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/register/register.component.css","./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/taches/taches.component.css","./src/app/taches/taches.component.html","./src/app/taches/taches.component.ts","./src/app/users/users.component.css","./src/app/users/users.component.html","./src/app/users/users.component.ts","./src/environments/environment.ts","./src/main.ts","./src/model/model.tache.ts","./src/services/authentication.service.ts","./src/services/galery.service.ts","./src/services/taches.service.ts","./src/services/users.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from '../login/login.component';\nimport { TachesComponent } from '../taches/taches.component';\nimport { NewTacheComponent } from '../new-tache/new-tache.component';\nimport { ContactsComponent } from '../contacts/contacts.component';\nimport { NewContactComponent } from '../new-contact/new-contact.component';\nimport { RegisterComponent } from '../register/register.component';\nimport { UsersComponent } from '../users/users.component';\nimport { PageNotFoundComponent } from '../page-not-found/page-not-found.component';\nimport { DetailContactComponent } from '../detail-contact/detail-contact.component';\nimport { DetailUserComponent } from '../detail-user/detail-user.component';\nimport { GalleryComponent } from '../gallery/gallery.component';\nimport { HomeComponent } from '../home/home.component';\nimport { EditTacheComponent } from '../edit-tache/edit-tache.component';\nimport { DetailTacheComponent } from '../detail-tache/detail-tache.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\n\nconst routes: Routes = [\n  {path: '',   redirectTo: '/login', pathMatch: 'full' },\n  {path: \"login\", component: LoginComponent},\n  {path: \"home\", component: HomeComponent},\n  {path: \"taches\", component: TachesComponent},\n  {path: \"new-tache\", component: NewTacheComponent},\n  {path: \"contacts\", component: ContactsComponent},\n  {path: \"new-contact\", component: NewContactComponent},\n  {path: \"register\", component: RegisterComponent},\n  {path: \"users\", component: UsersComponent},\n  {path: \"galeries\", component: GalleryComponent},\n  {path: \"detail-contact/:id\", component: DetailContactComponent},\n  {path: \"detail-user/:id\", component: DetailUserComponent},\n  {path: \"edit-user/:id\", component: EditUserComponent},\n  {path: \"edit-tache/:id\", component: EditTacheComponent},\n  {path: \"detail-tache/:id\", component: DetailTacheComponent},\n  {path: '**', component: PageNotFoundComponent }\n]\n\n@NgModule({\n  imports: [\n    CommonModule, RouterModule.forRoot(routes, { enableTracing: true })\n  ],\n  declarations: [],\n  exports:[RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing/app-routing.module.ts","module.exports = \"\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TachesComponent } from './taches/taches.component';\nimport { NewTacheComponent } from './new-tache/new-tache.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { NewContactComponent } from './new-contact/new-contact.component';\nimport { UsersComponent } from './users/users.component';\nimport { DetailUserComponent } from './detail-user/detail-user.component';\nimport { DetailContactComponent } from './detail-contact/detail-contact.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { TachesService } from '../services/taches.service';\nimport { EditTacheComponent } from './edit-tache/edit-tache.component';\nimport { DetailTacheComponent } from './detail-tache/detail-tache.component';\nimport { GaleryService } from '../services/galery.service';\nimport { UsersService } from '../services/users.service';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    TachesComponent,\n    NewTacheComponent,\n    ContactsComponent,\n    NewContactComponent,\n    UsersComponent,\n    DetailUserComponent,\n    DetailContactComponent,\n    PageNotFoundComponent,\n    GalleryComponent,\n    HomeComponent,\n    EditTacheComponent,\n    DetailTacheComponent,\n    EditUserComponent\n  ],\n  imports: [\n    BrowserModule, AppRoutingModule, FormsModule, HttpClientModule\n  ],\n  providers: [AuthenticationService, TachesService, GaleryService, UsersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/contacts/contacts.component.css\n// module id = ./src/app/contacts/contacts.component.css\n// module chunks = main","module.exports = \"<p>\\n  contacts works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/contacts/contacts.component.html\n// module id = ./src/app/contacts/contacts.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/contacts/contacts.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/detail-contact/detail-contact.component.css\n// module id = ./src/app/detail-contact/detail-contact.component.css\n// module chunks = main","module.exports = \"<p>\\n  detail-contact works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/detail-contact/detail-contact.component.html\n// module id = ./src/app/detail-contact/detail-contact.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-detail-contact',\n  templateUrl: './detail-contact.component.html',\n  styleUrls: ['./detail-contact.component.css']\n})\nexport class DetailContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/detail-contact/detail-contact.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/detail-tache/detail-tache.component.css\n// module id = ./src/app/detail-tache/detail-tache.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse myColor navbar-fixed-top\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand active\\\">omar.lo.ch</a>\\n      </div>\\n      <div>\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/taches\\\">Tâches</a></li>\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/contacts\\\">Contacts</a></li>\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/galeries\\\">Galeries</a></li>\\n          <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/users\\\">Utilisateurs</a></li>\\n          <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/roles\\\">Rôles</a></li>\\n        </ul>\\n      </div>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li><a class=\\\"clikable\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n        <li><a class=\\\"clikable\\\" (click)=\\\"onLogout()\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Logout</a></li>\\n        <li><a>{{authService.getUserConnected()}}\\n            <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n<div class=\\\"container spacer\\\">\\n  <div class=\\\"col-md-8 col-md-offset-2\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n          <div class=\\\"panel-heading\\\">Détail de la tache </div>\\n          <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">\\n                ID: <span class=\\\"badge\\\">{{tache.id}}</span>\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Nom de la tâche:\\n                    <span class=\\\"badge\\\">{{tache.nom}}</span>\\n                </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Statut:</label>\\n              <div class=\\\"form-control\\\">\\n                  <label class=\\\"control-label\\\">\\n                    <input [disabled]=true type=\\\"radio\\\" name=\\\"statut\\\"\\n                      [checked]=\\\"tache.statut\\\"> Ouvert\\n                    </label>\\n                    <label class=\\\"control-label\\\">\\n                      <input [disabled]=true type=\\\"radio\\\" name=\\\"statut\\\"\\n                          [checked]=\\\"!tache.statut\\\"> Fermé\\n                    </label>\\n              </div>\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Description:\\n                    <span class=\\\"badge\\\">{{tache.nom}}</span>\\n                </label>\\n            </div>\\n            <textarea disabled = true class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"tache.description\\\"\\n                      cols=\\\"30\\\" rows=\\\"5\\\"></textarea> <!-- [defaultValue]=\\\"tache.description\\\" égale [(ngModel)] =\\\"tache.description\\\" -->\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\"> Date de création:\\n                <span class=\\\"badge\\\">{{tache.dateCreation | date : \\\"dd-MM-yyyy\\\"}}</span>\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\"> Date d'expiration:\\n                  <span class=\\\"badge\\\"> {{tache.dateExpiration | date : \\\"dd-MM-yyyy\\\"}}</span>\\n                </label>\\n              </div>\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"onGoBack()\\\">Retour</button>\\n            </div>\\n          </div>\\n        </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/detail-tache/detail-tache.component.html\n// module id = ./src/app/detail-tache/detail-tache.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Tache } from '../../model/model.tache';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TachesService } from '../../services/taches.service';\n\n\n@Component({\n  selector: 'app-detail-tache',\n  templateUrl: './detail-tache.component.html',\n  styleUrls: ['./detail-tache.component.css']\n})\nexport class DetailTacheComponent implements OnInit {\n\n  public tache:Tache = new Tache();\n  constructor(private route: ActivatedRoute, private location: Location,\n      public authService: AuthenticationService, private tacheService: TachesService,\n      private router: Router) { }\n\n  ngOnInit() {\n    const id = +this.route.snapshot.params[\"id\"];\n    let token = this.authService.getToken();\n    this.tacheService.getTache(token, id).subscribe( data =>{\n      this.tache = data;\n      console.log(this.tache.statut);\n    }, err =>{\n      console.log(err);\n      this.onGoBack();\n    });\n  }\n\n  onLogout(){\n    this.authService.logout();\n    this.router.navigateByUrl(\"/login\");\n  }\n\n  onGoBack(){ this.location.back();}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/detail-tache/detail-tache.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/detail-user/detail-user.component.css\n// module id = ./src/app/detail-user/detail-user.component.css\n// module chunks = main","module.exports = \"<p>\\n  detail-user works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/detail-user/detail-user.component.html\n// module id = ./src/app/detail-user/detail-user.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-detail-user',\n  templateUrl: './detail-user.component.html',\n  styleUrls: ['./detail-user.component.css']\n})\nexport class DetailUserComponent implements OnInit {\n\n  constructor(private router: Router, private authService: AuthenticationService) { }\n\n  ngOnInit() {\n    if(!this.authService.isAdmin()){ this.router.navigateByUrl(\"/login\");}\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/detail-user/detail-user.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-tache/edit-tache.component.css\n// module id = ./src/app/edit-tache/edit-tache.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse myColor navbar-fixed-top\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand active\\\">omar.lo.ch</a>\\n      </div>\\n      <div>\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/taches\\\">Tâches</a></li>\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/contacts\\\">Contacts</a></li>\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/galeries\\\">Galeries</a></li>\\n          <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/users\\\">Utilisateurs</a></li>\\n          <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/roles\\\">Rôles</a></li>\\n        </ul>\\n      </div>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li><a class=\\\"clikable\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n        <li><a class=\\\"clikable\\\" (click)=\\\"onLogout()\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Logout</a></li>\\n        <li><a>{{authService.getUserConnected()}}\\n            <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n<div class=\\\"container-fluid spacer\\\">\\n  <div class=\\\"col-md-8 col-md-offset-2\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n          <div class=\\\"panel-heading\\\">Nouvelle Tâche</div>\\n          <div class=\\\"panel-body\\\">\\n            <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onUpdate()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Nom de la tâche</label>\\n                <input name=\\\"nom\\\" [(ngModel)]=\\\"tache.nom\\\" class=\\\"form-control\\\"\\n                  type=\\\"text\\\" required minlength=\\\"2\\\" #nom=\\\"ngModel\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Statut:</label>\\n                  <div class=\\\"form-control\\\">\\n                      <label class=\\\"control-label\\\">\\n                          <input type=\\\"radio\\\" name=\\\"statut\\\" [value]=true\\n                          [(ngModel)]=\\\"tache.statut\\\"> Ouvert\\n                        </label>\\n                        <label class=\\\"control-label\\\">\\n                            <input type=\\\"radio\\\" name=\\\"statut\\\" [value]=false\\n                            [(ngModel)]=\\\"tache.statut\\\"> Fermé\\n                        </label>\\n                  </div>\\n\\n                </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Description de la tâche</label>\\n                    <textarea class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"tache.description\\\"\\n                      cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\">Date d'expiration</label>\\n                    <input class=\\\"form-control\\\" type=\\\"date\\\" #dateExpiration=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"tache.dateExpiration\\\" name=\\\"dateExpiration\\\" required>\\n                </div>\\n                <button [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Enregistrer</button>\\n            </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-tache/edit-tache.component.html\n// module id = ./src/app/edit-tache/edit-tache.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TachesService } from '../../services/taches.service';\nimport { Tache } from '../../model/model.tache';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-tache',\n  templateUrl: './edit-tache.component.html',\n  styleUrls: ['./edit-tache.component.css']\n})\nexport class EditTacheComponent implements OnInit {\n\n  public tache: Tache = new Tache();\n\n  constructor(public authService: AuthenticationService,\n      private tacheService:TachesService, private location: Location,\n      private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit() {\n    if(!this.authService.isAdmin()){ this.router.navigateByUrl(\"/login\");}\n    let token = this.authService.getToken();\n    //const id = +this.route.snapshot.paramMap.get('id');\n    const id = +this.route.snapshot.params[\"id\"];\n    this.tacheService.getTache(token, id).subscribe(data =>{\n      this.tache = data;\n      console.log(this.tache.statut);\n    }, error =>{\n      console.log(error);\n    });\n  }\n\n  onUpdate(){\n    console.log(this.tache.statut);\n    console.log(this.tache);\n    let token = this.authService.getToken();\n    this.tacheService.updateTache(token, this.tache).subscribe(data =>{\n      console.log(data);\n      this.location.back();\n    }, err =>{\n      console.log(err);\n    });\n  }\n\n  onLogout(){\n    this.authService.logout();\n    this.router.navigateByUrl(\"/login\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/edit-tache/edit-tache.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-user/edit-user.component.css\n// module id = ./src/app/edit-user/edit-user.component.css\n// module chunks = main","module.exports = \"<p>\\n  edit-user works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-user/edit-user.component.html\n// module id = ./src/app/edit-user/edit-user.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/edit-user/edit-user.component.ts","module.exports = \".cadre{\\n  height: 250px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/gallery/gallery.component.css\n// module id = ./src/app/gallery/gallery.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse myColor navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand active\\\">omar.lo.ch</a>\\n    </div>\\n    <div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a class=\\\"clikable\\\" routerLink=\\\"/taches\\\">Tâches</a></li>\\n        <li><a class=\\\"clikable\\\" routerLink=\\\"/contacts\\\">Contacts</a></li>\\n        <li><a class=\\\"clikable\\\" routerLink=\\\"/galeries\\\">Galeries</a></li>\\n        <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/users\\\">Utilisateurs</a></li>\\n        <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/roles\\\">Rôles</a></li>\\n      </ul>\\n    </div>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li><a class=\\\"clikable\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n      <li><a class=\\\"clikable\\\" (click)=\\\"onLogout()\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Logout</a></li>\\n      <li><a>{{authService.getUserConnected()}}\\n          <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container-fluid spacer\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading myCenter\\\">Liste des photos</div>\\n    <div class=\\\"panel-body\\\">\\n      <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onChercher()\\\">\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"input\\\" name=\\\"motCle\\\" [(ngModel)]=\\\"motCle\\\"\\n            type=\\\"text\\\" placeholder=\\\"Chercher les photos\\\" required>\\n          <button [disabled]=\\\"!f.valid\\\" class=\\\"btn btn-primary btnRcherche\\\" type=\\\"submit\\\">\\n            <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n          </button>\\n        </div>\\n      </form>\\n      <div class=\\\"row\\\">\\n        <div *ngFor= \\\"let photo of listePhotos?.hits\\\" class=\\\"col-md-3\\\">\\n          <div class=\\\"panel panel-primary cadre\\\">\\n            <div class=\\\"panel-heading\\\">\\n              <img src=\\\"{{photo.userImageURL}}\\\" class=\\\"img-circle\\\" width=\\\"50\\\" height=\\\"50\\\">\\n              <span>{{photo.user}}</span>\\n            </div>\\n            <div class=\\\"panel-body clikable\\\" >\\n              <div>\\n                  <p><strong>Tags</strong>: {{getTags(photo.tags)}}</p>\\n              </div>\\n              <img src=\\\"{{photo.previewURL}}\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"container\\\">\\n        <ul class=\\\"nav nav-pills\\\">\\n          <li *ngFor=\\\"let p of totalPages; let i = index\\\"\\n            [ngClass]=\\\"{'active': pageCourrente == i + 1}\\\">\\n            <a (click)=\\\"goToPage(i)\\\" class=\\\"clikable\\\">{{i}}</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/gallery/gallery.component.html\n// module id = ./src/app/gallery/gallery.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { GaleryService } from '../../services/galery.service';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.css']\n})\nexport class GalleryComponent implements OnInit {\n\n  motCle: string = \"\";\n  listePhotos:any;\n  pageCourrente: number = 1;\n  private size: number = 10;\n  totalPages: Array<number>;\n\n\n  constructor(private galeryService: GaleryService,\n    public authService: AuthenticationService,\n    private router : Router) {}\n\n  ngOnInit() {\n  }\n\n  onLogout(){\n    this.router.navigateByUrl(\"/login\");\n  }\n\n  onChercher(){\n    this.galeryService.getPhotos(this.motCle, this.pageCourrente, this.size).subscribe(data =>{\n      console.log(data);\n      this.listePhotos = data;\n      let nbPages = this.listePhotos.totalHits / this.size\n      if(this.listePhotos.totalHits % this.size != 0){ nbPages = Math.trunc(nbPages); ++ nbPages;}\n      /*\n      if (this.listePhotos.totalHits % this.size != 0) {\n        nbPages = Math.trunc(nbPages) + 1;\n      }*/\n      this.totalPages = new Array(nbPages);\n    }, err =>{\n      console.log(err);\n    });\n  }\n\n  getTags(tags: string){\n    return tags.length <= 20 ? tags : this.getSortStr(tags);\n  }\n\n  getSortStr(tags: string){\n    let s : string = \"\";\n    for(let i= 0; i<=20; i++){\n      s += tags.charAt(i);\n    }\n    return s + \"...\";\n  }\n\n  goToPage(index:number){\n    this.pageCourrente = index + 1;\n    this.onChercher();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gallery/gallery.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse myColor navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand active\\\">omar.lo.ch</a>\\n    </div>\\n    <div *ngIf=\\\"mode == 1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a class=\\\"clikable\\\" routerLink=\\\"/taches\\\">Tâches</a></li>\\n        <li><a class=\\\"clikable\\\" routerLink=\\\"/contacts\\\">Contacts</a></li>\\n        <li><a class=\\\"clikable\\\" routerLink=\\\"/galeries\\\">Galeries</a></li>\\n        <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/users\\\">Utilisateurs</a></li>\\n        <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/roles\\\">Rôles</a></li>\\n      </ul>\\n    </div>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li><a class=\\\"clikable\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n      <li><a class=\\\"clikable\\\" (click)=\\\"goBack()\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Logout</a></li>\\n      <li><a>{{authService.getUserConnected()}}\\n          <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public mode:number = 1;\n\n  constructor(private location: Location, private router: Router,\n      public authService: AuthenticationService) {}\n\n  ngOnInit() { }\n\n  //onGoTaches(){ this.router.navigate([\"/taches\"]);}\n\n  goBack(){\n    //this.location.back();\n    this.authService.logout();\n    this.router.navigateByUrl(\"/login\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \"\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<p></p>\\n<div></div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"mode == 1\\\">\\n    <strong>Le nom d'utilisateur ou le mot de passe des invalide!!</strong>\\n  </div>\\n  <div class=\\\"col-md-6 col-md-offset-3 spacer\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n          <div class=\\\"panel-heading myCenter\\\"> <h4>Authentification</h4> </div>\\n          <div class=\\\"panel-body\\\">\\n            <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onLogin(f.value)\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\"></label>\\n                <label class=\\\"control-label\\\"></label>\\n                <input (input)=\\\"setMode()\\\" class=\\\"form-control\\\" name=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ngModel required>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\"></label>\\n                <input (input)=\\\"setMode()\\\"  class=\\\"form-control\\\" name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ngModel required>\\n                <label class=\\\"control-label\\\"></label>\\n                <label class=\\\"control-label\\\"></label>\\n              </div>\\n              <button [disabled]=\\\"!f.valid\\\" class=\\\"btn btn-danger\\\" type=\\\"submit\\\">Login</button>\\n              <button routerLink=\\\"/register\\\" class=\\\"btn btn-success\\\" type=\\\"submit\\\">S'enregistrer</button>\\n            </form>\\n          </div>\\n        </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  mode: number = 0;\n\n  constructor( private authService: AuthenticationService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogin(dataForm){\n    this.authService.login(dataForm).subscribe(res =>{\n      console.log(res);\n      let jwt = res.headers.get(\"authorization\");\n      console.log(jwt);\n      this.authService.saveToken(jwt);\n      //this.router.navigateByUrl(\"/home\");\n      this.router.navigate([\"/home\"]);\n    }, err =>{\n      console.log(err);\n      this.mode = 1;\n    });\n  }\n\n  setMode(){\n    this.mode = 0;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/new-contact/new-contact.component.css\n// module id = ./src/app/new-contact/new-contact.component.css\n// module chunks = main","module.exports = \"<p>\\n  new-contact works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/new-contact/new-contact.component.html\n// module id = ./src/app/new-contact/new-contact.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-contact',\n  templateUrl: './new-contact.component.html',\n  styleUrls: ['./new-contact.component.css']\n})\nexport class NewContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/new-contact/new-contact.component.ts","module.exports = \".myPosition{\\n  float: right;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/new-tache/new-tache.component.css\n// module id = ./src/app/new-tache/new-tache.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse myColor navbar-fixed-top\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand active\\\">omar.lo.ch</a>\\n      </div>\\n      <div>\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/taches\\\">Tâches</a></li>\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/contacts\\\">Contacts</a></li>\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/galeries\\\">Galeries</a></li>\\n          <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/users\\\">Utilisateurs</a></li>\\n          <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/roles\\\">Rôles</a></li>\\n        </ul>\\n      </div>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li><a class=\\\"clikable\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n        <li><a class=\\\"clikable\\\" (click)=\\\"onLogout()\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Logout</a></li>\\n        <li><a>{{authService.getUserConnected()}}\\n            <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n<div class=\\\"container-fluid spacer\\\">\\n  <div class=\\\"col-md-6 col-md-offset-3\\\">\\n      <div *ngIf=\\\"mode == 1\\\" class=\\\"alert alert-danger\\\">\\n          <span>Le nom d'une tâche doit être unique!!</span>\\n        </div>\\n      <div *ngIf=\\\"mode==0\\\">\\n          <div class=\\\"panel panel-primary\\\">\\n              <div class=\\\"panel-heading\\\">Nouvelle Tâche</div>\\n              <div class=\\\"panel-body\\\">\\n                <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSave(f.value)\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\">Nom de la tâche</label>\\n                    <input (input)=\\\"setError()\\\"  name=\\\"nom\\\" [(ngModel)]=\\\"tache.nom\\\" class=\\\"form-control\\\"\\n                      type=\\\"text\\\" required minlength=\\\"2\\\" #nom=\\\"ngModel\\\">\\n                      <div *ngIf=\\\"nom.invalid && (nom.dirty || nom.touched)\\\"\\n                          class=\\\"alert alert-danger\\\">\\n                        <span>Le nom est obligatoire et doit avoir au\\n                          moins deux caractères!!</span>\\n                      </div>\\n\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Statut:</label>\\n                      <div class=\\\"form-control\\\">\\n                          <label class=\\\"control-label\\\">\\n                              <input type=\\\"radio\\\" name=\\\"statut\\\" [value]=true [checked]=\\\"tache.statut\\\"\\n                              [(ngModel)]=\\\"tache.statut\\\"> Ouvert\\n                            </label>\\n                            <label class=\\\"control-label\\\">\\n                                <input type=\\\"radio\\\" name=\\\"statut\\\" [value]=false\\n                                [(ngModel)]=\\\"tache.statut\\\"> Fermé\\n                            </label>\\n                      </div>\\n\\n                    </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Description de la tâche</label>\\n                        <textarea class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"tache.description\\\"\\n                          cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\">Date d'expiration</label>\\n                        <input class=\\\"form-control\\\" type=\\\"date\\\" #dateExpiration=\\\"ngModel\\\"\\n                            [(ngModel)]=\\\"tache.dateExpiration\\\" name=\\\"dateExpiration\\\" required>\\n                        <div *ngIf=\\\"dateExpiration.errors\\\" class=\\\"alert alert-danger\\\">\\n                          <span>La date d'expiration est obligatoire!!</span>\\n                        </div>\\n                    </div>\\n                    <button [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Enregistrer</button>\\n                    <button class=\\\"btn btn-danger myPosition\\\" (click)=\\\"goBack()\\\">Annuler</button>\\n                </form>\\n              </div>\\n            </div>\\n      </div>\\n      <div *ngIf=\\\"mode == 2\\\">\\n          <div class=\\\"panel panel-primary\\\">\\n              <div class=\\\"panel-heading\\\">Confirmation</div>\\n              <div class=\\\"panel-body\\\">\\n                <label class=\\\"control-label\\\">Nom de la tâche:\\n                  <strong>{{tache.nom}}</strong>\\n                </label>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\">Statut:</label>\\n                    <div class=\\\"form-control\\\">\\n                        <label class=\\\"control-label\\\">\\n                          <input [disabled]=true type=\\\"radio\\\" name=\\\"statut\\\"\\n                            [checked]=\\\"tache.statut\\\"> Ouvert\\n                          </label>\\n                          <label class=\\\"control-label\\\">\\n                            <input [disabled]=true type=\\\"radio\\\" name=\\\"statut\\\"\\n                                [checked]=\\\"!tache.statut\\\"> Fermé\\n                          </label>\\n                    </div>\\n\\n                  </div>\\n                <label class=\\\"control-label\\\">Description:\\n                  <strong>{{tache.nom}}</strong>\\n                </label>\\n                <textarea disabled = true class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"tache.description\\\"\\n                          cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\"> Date de création:\\n                    <strong>{{tache.dateCreation | date : \\\"dd-MM-yyyy\\\"}}</strong>\\n                  </label>\\n                </div>\\n                <p></p>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\"> Date d'expiration:\\n                        <strong>{{tache.dateExpiration | date : \\\"dd-MM-yyyy\\\"}}</strong>\\n                    </label>\\n                  </div>\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"goBack()\\\">Retour</button>\\n                </div>\\n              </div>\\n            </div>\\n      </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/new-tache/new-tache.component.html\n// module id = ./src/app/new-tache/new-tache.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Tache } from '../../model/model.tache';\nimport { TachesService } from '../../services/taches.service';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-tache',\n  templateUrl: './new-tache.component.html',\n  styleUrls: ['./new-tache.component.css']\n})\nexport class NewTacheComponent implements OnInit {\n\n  //public tache: Tache = new Tache();\n  public tache: Tache;\n  public mode: number = 0;\n\n  constructor(private location: Location, private tacheService: TachesService,\n      public authService: AuthenticationService, private route: Router) { }\n\n  ngOnInit() {\n    if(!this.authService.isAdmin()){ this.route.navigateByUrl(\"/login\");}\n    this.tache = new Tache();\n  }\n\n  setError(){ this.mode = 0;}\n\n  onSave(dataForm){\n    let jwt = this.authService.getToken();\n    this.tacheService.enregistrerTache(this.tache, jwt).subscribe(data =>{\n      this.tache = data;\n      this.mode = 2;\n    }, err =>{\n      this.mode = 1;\n      console.log(err.error.message);\n      console.log(err);\n      //console.log(JSON.parse(err.body).message);\n    });\n  }\n\n  goBack(){ this.location.back();}\n\n  onLogout(){\n    this.authService.logout();\n    this.route.navigateByUrl(\"/login\");\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/new-tache/new-tache.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/page-not-found/page-not-found.component.css\n// module id = ./src/app/page-not-found/page-not-found.component.css\n// module chunks = main","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/page-not-found/page-not-found.component.html\n// module id = ./src/app/page-not-found/page-not-found.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/page-not-found/page-not-found.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.css\n// module id = ./src/app/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container myMargin\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"mode == 1\\\">\\n        <strong>Le nom d'utilisateur ou le mot de passe des invalide!!</strong>\\n      </div>\\n  <div class=\\\"col-md-6 col-md-offset-3\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n          <div class=\\\"panel-heading myCenter\\\">Nouvel utilisateur</div>\\n          <div class=\\\"panel-body\\\">\\n              <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onEnregistrer(f.value)\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\"></label>\\n                      <label class=\\\"control-label\\\"></label>\\n                      <input class=\\\"form-control\\\" name=\\\"nom\\\" type=\\\"text\\\"\\n                        placeholder=\\\"Saisissez votre nom\\\" ngModel #nom=\\\"ngModel\\\" required>\\n\\n                        <div *ngIf=\\\"nom.invalid\\\" class=\\\"alert alert-danger\\\">\\n                          <span>Le nom est obligatoire!!</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\"></label>\\n                        <label class=\\\"control-label\\\"></label>\\n                        <input class=\\\"form-control\\\" name=\\\"prenom\\\" type=\\\"text\\\"\\n                          placeholder=\\\"Saisissez votre prénom\\\" ngModel #prenom=\\\"ngModel\\\" required>\\n\\n                          <div *ngIf=\\\"prenom.invalid\\\" class=\\\"alert alert-danger\\\">\\n                              <span>Le prénom est obligatoire!!</span>\\n                            </div>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                          <label class=\\\"control-label\\\"></label>\\n                          <label class=\\\"control-label\\\"></label>\\n                          <input class=\\\"form-control\\\" name=\\\"email\\\" type=\\\"email\\\"\\n                            placeholder=\\\"Saisissez votre email\\\" ngModel #email=\\\"ngModel\\\" email required>\\n\\n                            <div *ngIf=\\\"email.invalid\\\" class=\\\"alert alert-danger\\\">\\n                                <span>L'email est obligatoire!!</span>\\n                              </div>\\n                          </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\"></label>\\n                    <label class=\\\"control-label\\\"></label>\\n                    <input class=\\\"form-control\\\" name=\\\"username\\\" type=\\\"text\\\"\\n                      placeholder=\\\"Saisissez votre username\\\" #username=\\\"ngModel\\\" ngModel required>\\n\\n                      <div *ngIf=\\\"username.invalid\\\" class=\\\"alert alert-danger\\\">\\n                          <span>Le nom d'utilisateur est obligatoire!!</span>\\n                        </div>\\n                    </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\"></label>\\n                    <input  class=\\\"form-control\\\" name=\\\"password\\\" type=\\\"password\\\"\\n                      placeholder=\\\"Saisissez votre password\\\" #password=\\\"ngModel\\\" ngModel required>\\n\\n                      <div *ngIf=\\\"password.invalid\\\" class=\\\"alert alert-danger\\\">\\n                          <span>Le password est obligatoire!!</span>\\n                        </div>\\n                    </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\"></label>\\n                    <input  class=\\\"form-control\\\" name=\\\"repassword\\\" type=\\\"password\\\"\\n                      placeholder=\\\"Resaisissez votre password\\\" #repassword=\\\"ngModel\\\" ngModel required>\\n\\n                      <div *ngIf=\\\"repassword.invalid\\\" class=\\\"alert alert-danger\\\">\\n                          <span>Il faut confirmer votre password!!</span>\\n                        </div>\\n                      <label class=\\\"control-label\\\"></label>\\n                    <label class=\\\"control-label\\\"></label>\\n                  </div>\\n                  <button [disabled]=\\\"!f.valid\\\" class=\\\"btn btn-success\\\" type=\\\"submit\\\">S'enregistrer</button>\\n                  <button routerLink=\\\"/login\\\"  class=\\\"btn btn-danger\\\" type=\\\"submit\\\">Annuler</button>\\n                </form>\\n          </div>\\n        </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.html\n// module id = ./src/app/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  mode: number =0;\n\n  constructor(private authService: AuthenticationService,\n    private location: Location) { }\n\n  ngOnInit() {\n  }\n\n  onEnregistrer(dataForm){\n    console.log(dataForm);\n    this.authService.enregistrer(dataForm).subscribe(data =>{\n      console.log(data);\n      this.location.back();\n      this.mode = 0;\n    }, err =>{\n      console.log(err);\n      this.mode = 1;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register/register.component.ts","module.exports = \".changeColor:hover{\\n  background-color:lightskyblue;\\n}\\n\\n.btnSpacer{\\n  margin-bottom: 10px;\\n}\\n\\n.myMargin{\\n  margin-left: 35px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/taches/taches.component.css\n// module id = ./src/app/taches/taches.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse myColor navbar-fixed-top\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand active\\\">omar.lo.ch</a>\\n      </div>\\n      <div>\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/taches\\\">Tâches</a></li>\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/contacts\\\">Contacts</a></li>\\n          <li><a class=\\\"clikable\\\" routerLink=\\\"/galeries\\\">Galeries</a></li>\\n          <li *ngIf=\\\"autService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/users\\\">Utilisateurs</a></li>\\n          <li *ngIf=\\\"autService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/roles\\\">Rôles</a></li>\\n        </ul>\\n      </div>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li><a class=\\\"clikable\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n        <li><a class=\\\"clikable\\\" (click)=\\\"onLogout()\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Logout</a></li>\\n        <li><a>{{autService.getUserConnected()}}\\n            <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container-fluid spacer\\\">\\n      <button *ngIf=\\\"autService.isAdmin()\\\" routerLink=\\\"/new-tache\\\"\\n        class=\\\"btn btn-danger btnSpacer\\\">Nouvelle Tâche</button>\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading myCenter\\\">Liste des Tâches</div>\\n        <div class=\\\"panel-body\\\">\\n          <form #f=\\\"ngForm\\\">\\n            <div class=\\\"form-group\\\">\\n                <input class=\\\"input\\\" name=\\\"motCle\\\" [(ngModel)]=\\\"motCle\\\" (input)=\\\"onChercher()\\\"\\n                  type=\\\"text\\\" placeholder=\\\"Chercher une tâche\\\">\\n            </div>\\n          </form>\\n          <table class=\\\"table table-striped table-hover\\\">\\n            <tr>\\n              <th>Nom</th><th>Description</th><th>Date de création</th>\\n              <th>Date d'expiration</th><th>Statut</th><th></th><th></th>\\n            </tr>\\n            <tr *ngFor=\\\"let t of pageTaches?.content\\\"\\n              class=\\\"clikable changeColor\\\">\\n              <td routerLink=\\\"/detail-tache/{{t.id}}\\\">{{t.nom}}</td>\\n              <td routerLink=\\\"/detail-tache/{{t.id}}\\\">\\n                {{t.description != null ? getDescription(t.description) : \\\"\\\"}}\\n              </td>\\n              <td routerLink=\\\"/detail-tache/{{t.id}}\\\">{{t.dateCreation}}</td>\\n              <td routerLink=\\\"/detail-tache/{{t.id}}\\\">{{t.dateExpiration}}</td>\\n              <td routerLink=\\\"/detail-tache/{{t.id}}\\\">{{getStatut(t.statut)}}</td>\\n              <!-- <td (click)=\\\"onEdit(t.id)\\\"><a >Editer</a></td> -->\\n              <td *ngIf=\\\"autService.isAdmin()\\\" routerLink=\\\"/edit-tache/{{t.id}}\\\">\\n                <a> <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Editer</a>\\n              </td>\\n              <td *ngIf=\\\"autService.isAdmin()\\\" (click)=\\\"onRemove(t)\\\">\\n                <a> <span class=\\\"glyphicon glyphicon-trash\\\"></span> Supprimer</a>\\n              </td>\\n            </tr>\\n          </table>\\n          <div class=\\\"container\\\">\\n            <ul class=\\\"nav nav-pills\\\">\\n              <li [ngClass]=\\\"{'active': i == pageCourrente}\\\" *ngFor=\\\"let p of pages; let i = index\\\">\\n                <a class=\\\"clikable\\\" (click)=\\\"goToPage(i)\\\"> {{i}} </a>\\n              </li>\\n            </ul>\\n          </div>\\n          <p></p>\\n          <div class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-success myMargin\\\" (click)=\\\"onGoBack()\\\">Retour</button>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/taches/taches.component.html\n// module id = ./src/app/taches/taches.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TachesService } from '../../services/taches.service';\nimport { Tache } from '../../model/model.tache';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-taches',\n  templateUrl: './taches.component.html',\n  styleUrls: ['./taches.component.css']\n})\nexport class TachesComponent implements OnInit {\n\n  public pageTaches:any;\n  public pageCourrente: number= 0;\n  private size: number= 5;\n  public motCle: string = \"\";\n  public pages: Array<number>;\n\n  constructor(public autService: AuthenticationService, private router: Router,\n    private tachesService: TachesService, private location: Location) { }\n\n  ngOnInit() {\n\n    /*\n    this.tachesService.getTaches(token).subscribe(data =>{\n      console.log(data);\n    }, err =>{\n      console.log(err);\n      this.router.navigateByUrl(\"/login\");\n    });*/\n\n    //this.tachesService.chercherTaches(token, \"A\", 0, 5).subscribe( data =>console.log(data));\n\n    this.doChercher();\n  }\n\n  doChercher(){\n    let token = this.autService.getToken();\n    this.tachesService.chercherTaches(token, this.motCle, this.pageCourrente,this.size)\n    .subscribe(data =>{\n      this.pageTaches = data;\n      this.pages = new Array(this.pageTaches.totalPages);\n      console.log(this.pageTaches);\n    }, error =>{\n      console.log(error);\n      this.onLogout();\n    });\n  }\n\n  onLogout(){\n    this.autService.logout();\n    this.router.navigateByUrl(\"/login\");\n  }\n\n  onChercher(){\n    this.doChercher();\n  }\n\n  goToPage(index: number){\n    this.pageCourrente = index;\n    this.doChercher();\n  }\n/* 2ème façon d'appeler le composant Edit-tache\n  onEdit(id: number){\n    this.router.navigate([\"/edit-tache\", id]);\n  }*/\n\n  onGoBack(){\n    //this.location.back();\n    this.router.navigateByUrl(\"/home\");\n  }\n\n  onRemove(t: Tache){\n    let token = this.autService.getToken();\n    this.tachesService.deleteTache(t.id, token).subscribe(data => {\n      this.pageTaches.content.splice(this.pageTaches.content.indexOf(t), 1);\n    },err =>{\n      console.log(err);\n    });\n  }\n\n  getStatut(t: boolean){\n    return t == true ? \"Ouvert\" : \"Fermé\"\n  }\n\n  getDescription(desc: string){\n    return desc.length <= 5 ? desc : this.getSortStr(desc);\n  }\n\n  getSortStr(desc: string){\n    let s : string = \"\";\n    for(let i= 0; i<=20; i++){\n      s += desc.charAt(i);\n    }\n    return s + \"...\";\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/taches/taches.component.ts","module.exports = \".changeColor:hover{\\n  background-color:lightskyblue;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/users.component.css\n// module id = ./src/app/users/users.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-inverse myColor navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand active\\\">omar.lo.ch</a>\\n    </div>\\n    <div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a class=\\\"clikable\\\" routerLink=\\\"/taches\\\">Tâches</a></li>\\n        <li><a class=\\\"clikable\\\" routerLink=\\\"/contacts\\\">Contacts</a></li>\\n        <li><a class=\\\"clikable\\\" routerLink=\\\"/galeries\\\">Galeries</a></li>\\n        <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/users\\\">Utilisateurs</a></li>\\n        <li *ngIf=\\\"authService.isAdmin()\\\"><a class=\\\"clikable\\\" routerLink=\\\"/roles\\\">Rôles</a></li>\\n      </ul>\\n    </div>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li><a class=\\\"clikable\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n      <li><a class=\\\"clikable\\\" (click)=\\\"onLogout()\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Logout</a></li>\\n      <li><a>{{authService.getUserConnected()}}\\n          <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"container-fluid spacer\\\">\\n  <div class=\\\"col-md-8 col-md-offset-2\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n          <div class=\\\"panel-heading myCenter\\\">Liste des utilisateurs</div>\\n          <div class=\\\"panel-body\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <tr>\\n                <th>ID</th><th>Username</th><th></th><th></th>\\n              </tr>\\n              <tr *ngFor=\\\"let u of users\\\" class=\\\"clikable changeColor\\\">\\n              <!--  <td (click)=\\\"onDetail(u.id)\\\"> -->\\n                <td routerLink=\\\"/detail-user/{{u.id}}\\\">\\n                    <span class=\\\"badge\\\">{{u.id}}</span>\\n                </td>\\n                <td routerLink=\\\"/detail-user/{{u.id}}\\\">\\n                  {{u.username}}\\n                </td>\\n             <!--   <td (click)=\\\"onEdit(u.id)\\\"> -->\\n                <td routerLink=\\\"/edit-user/{{u.id}}\\\">\\n                  <a> <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Editer</a>\\n                </td>\\n                <td (click)=\\\"onRemove(u.id)\\\">\\n                  <a> <span class=\\\"glyphicon glyphicon-trash\\\"></span> Supprimer</a>\\n                </td>\\n\\n              </tr>\\n            </table>\\n            <!--\\n            <ul class=\\\"nav\\\">\\n              <li *ngFor=\\\"let u of users\\\">\\n                <span class=\\\"badge\\\">{{u.id}}</span> {{u.username}}\\n              </li>\\n            </ul> -->\\n          </div>\\n        </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/users.component.html\n// module id = ./src/app/users/users.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { UsersService } from '../../services/users.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  public users:any;\n\n  constructor(private router: Router, public authService: AuthenticationService,\n      private usersService: UsersService) { }\n\n  ngOnInit() {\n    if(!this.authService.isAdmin()){ this.router.navigateByUrl(\"/login\");}\n    let jwt = this.authService.getToken();\n    this.usersService.getUsers(jwt).subscribe(data =>{\n      console.log(data);\n      this.users = data;\n    }, err =>{\n      console.log(err);\n      this.router.navigateByUrl(\"/home\");\n    });\n  }\n\n  onLogout(){\n    this.authService.logout();\n    this.router.navigateByUrl(\"/login\");\n  }\n/*\n  onDetail(id: number){\n    this.router.navigate([\"/detail-user\", id]);\n  } remplacé par routerLink=\"/detail-user/{{u.id}}\"*/\n\n  /*\n  onEdit(id: number){\n    this.router.navigate([\"/edit-user\", id]);\n  } remplacé par routerLink=\"/edit-user/{{u.id}}\"*/\n\n  onRemove(id: number){}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/users.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","export class Tache {\n  /*\n  public nom: string;\n  public description: string;\n  public dateCreation: Date;\n  public dateExpiration: Date;*/\n\n  //déclarer les attributs avec les valeurs par défaut\n  /*\n  public nom: string = \"\";\n  public description: string = \"\";\n  public dateCreation: Date = null;\n  public dateExpiration: Date = null;*/\n\n  // Déclaration avec seul un constructeur\n  /*\n  constructor(\n    public nom: string\n    public description: string\n    public dateCreation: Date\n    public dateExpiration: Date\n  ){}*/\n\n   // Déclaration avec seul un constructeur (? vaut dire que cet attribut n'est pas obligatoir)\n  /*\n  constructor(\n    public nom?: string\n    public description?: string\n    public dateCreation?: Date\n    public dateExpiration?: Date\n  ){}*/\n\n\n  // Autre façon de déclarer les attributs avec les valeurs par défaut\n  /*\n  public nom?: string = \"\";\n  public description?: string = \"\";\n  public dateCreation?: Date = null;\n  public dateExpiration?: Date = null;*/\n\n  // Autre façon de déclarer les attributs\n  public id?: number;\n  public nom?: string;\n  public description?: string;\n  public dateCreation?: Date = new Date();\n  public dateExpiration?: Date;\n  public statut?: boolean;\n\n  //Voici plusieurs façons de créer classe avec des attributs\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/model.tache.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelper } from \"angular2-jwt\";\n\n@Injectable()\nexport class AuthenticationService {\n\n  //private host: string = \"http://localhost:8080\";\n  private host: string = \"https://gestiondescontactsettaches.cfapps.io\";\n  private jwtToken = null;\n  private roles:Array<any>=[];\n  private userConnected: string=\"\";\n\n  constructor(private http: HttpClient) { }\n\n  login(user){\n    return this.http.post(this.host + \"/login\", user, {observe: \"response\"});\n  }\n\n  loadToken(){\n    this.jwtToken = localStorage.getItem(\"token\");\n  }\n\n  saveToken(jwt: string){\n    localStorage.setItem(\"token\", jwt);\n    let jwtHelper = new JwtHelper();\n    this.roles = jwtHelper.decodeToken(jwt).roles;\n    this.userConnected = jwtHelper.decodeToken(jwt).sub;\n  }\n\n  getToken(){\n    if(this.jwtToken == null) { this.loadToken();}\n    return this.jwtToken;\n  }\n\n  logout(){\n    this.jwtToken = null;\n    localStorage.removeItem(\"token\");\n  }\n\n  isAdmin(){\n    for( let r of this.roles){\n      if( r.authority == \"ADMIN\") return true;\n    }\n    return false;\n  }\n\n  getUserConnected(){ return this.userConnected;}\n\n  enregistrer(userForm){\n    return this.http.post(this.host + \"/AccountRestController/register\", userForm);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/authentication.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class GaleryService {\n\n  private host: string = \"https://pixabay.com/api/\";\n  private string_key: string = \"8000561-fb965d3bd2ba7696f0d46b078\";\n\n  constructor(private http: HttpClient) { }\n\n  getPhotos(nomVille: string, page: number, size: number){\n    return this.http.get(this.host + \"?key=\" + this.string_key + \"&q=\" + nomVille + \"&page=\" + page\n        + \"&per_page=\" + size);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/galery.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Tache } from '../model/model.tache';\n\n@Injectable()\nexport class TachesService {\n\n  //private host: string = \"http://localhost:8080\";\n  private host: string = \"https://gestiondescontactsettaches.cfapps.io\"\n  constructor(private http: HttpClient) { }\n\n  getTaches(jwtToken: string){\n    return this.http.get(this.host + \"/TachesRestController/taches\",\n      {headers: new HttpHeaders({\"Authorization\": jwtToken})});\n  }\n\n  getTache(jwtToken: string, id:number){\n    return this.http.get(this.host + \"/TachesRestController/taches/\" + id,\n      {headers: new HttpHeaders({\"Authorization\": jwtToken})});\n  }\n\n  chercherTaches(jwtToken:string, motCle:string, page: number, size:number){\n    return this.http.get(this.host + \"/TachesRestController/chercherTaches?\"\n      + \"motCle=\" + motCle + \"&page=\" + page + \"&size=\" + size,\n      {headers: new HttpHeaders({\"Authorization\": jwtToken})});\n  }\n\n  enregistrerTache(tache: Tache, jwtToken: string){\n    return this.http.post(this.host + \"/TachesRestController/taches\", tache,\n      {headers: new HttpHeaders({\"Authorization\": jwtToken})});\n  }\n\n  updateTache(jwt:string, tache: Tache){\n    return this.http.put(this.host + \"/TachesRestController/taches/\" + tache.id, tache,\n      {headers: new HttpHeaders({\"Authorization\": jwt})});\n  }\n\n  deleteTache(id: number, jwt:string){\n    return this.http.delete(this.host + \"/TachesRestController/taches/\" + id,\n      {headers: new HttpHeaders({\"Authorization\": jwt})});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/taches.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class UsersService {\n\n  //private host: string = \"http://localhost:8080/AccountRestController\";\n  private host: string = \"https://gestiondescontactsettaches.cfapps.io/AccountRestController\"\n  constructor(private http: HttpClient) { }\n\n  public getUsers(jwt: string){\n    return this.http.get(this.host + \"/users\",\n      { headers: new HttpHeaders({\"authorization\": jwt})});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/users.service.ts"],"sourceRoot":"webpack:///"}